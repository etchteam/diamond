---
layout: default.webc
title: Diamond UI - Bring clarity to your components
description: Diamond UI is a methodology for teams who build software products and design systems.
---

<diamond-wrap size="xxl" class="diamond-spacing-bottom-fluid">
  <section>
    <diamond-section padding="fluid">
      <d-home-hero></d-home-hero>
    </diamond-section>
  </section>

  <d-separator @load="true"></d-separator>

  <div class="fade-in fade-in-delay">
    <section>
      <diamond-section padding="fluid">
        <d-title-group class="diamond-text-align-center diamond-spacing-bottom-xl">
          <p>The methodology in a nutshell</p>
          <h2>Introducing the four Cs</h2>
          <p>Each component is created with a single concern from one of four areas of responsibility.</p>
        </d-title-group>
        <d-tabs>
          <ul>
            <li webc:for="tab of ['content', 'controls', 'canvas', 'composition']">
              <a :href="`#${tab}-tab`">
                <d-icon :icon="tab" class="diamond-text-size-lg text-color-blue"></d-icon>
                <span @text="tab"></span>
              </a>
            </li>
          </ul>
        </d-tabs>
  
        <diamond-section padding="fluid" class="fade-in" id="content-tab">
          <diamond-grid wrap="wrap">
            <diamond-grid-item small-mobile="12" small-tablet="6">
              <p class="diamond-text-size-lg diamond-spacing-bottom-md">
                Content components look after the general styles for text and images, but can extend to
                data-specific patterns such as user profiles or product information.
              </p>
              <h3 class="diamond-text-size-base">Examples</h3>
              <ul>
                <li>Heading &ndash; title elements, represented in HTML as h1-5</li>
                <li>Text &ndash; a piece of typographic content</li>
                <li>Icon &ndash; a glyph representing something in the app ecosystem</li>
                <li>Data-specific &ndash; UserProfile, ProductSummary</li>
              </ul>
            </diamond-grid-item>
            <diamond-grid-item small-mobile="12" small-tablet="6">
<syntax-highlight
  language="html"
  webc:import="npm:@11ty/eleventy-plugin-syntaxhighlight"
>
<h2>Title</h2>
<p>A paragraph of text.</p>
</syntax-highlight>
            </diamond-grid-item>
          </diamond-grid>
        </diamond-section>
  
        <diamond-section padding="fluid" class="fade-in" id="controls-tab">
          <diamond-grid wrap="wrap">
            <diamond-grid-item small-mobile="12" small-tablet="6">
              <p class="diamond-text-size-lg diamond-spacing-bottom-md">
                Controls are interactive elements of the page. Anything that can be clicked,
                dragged, typed into or accessed in some way with the mouse, keyboard or touch
                is a control.
              </p>
              <h3 class="diamond-text-size-base">Examples</h3>
              <ul>
                <li>Button &ndash; a clickable component that triggers an action, such as submitting a form</li>
                <li>Input &ndash; a hypertext link that takes the user to another page or section of the app</li>
                <li>Form &ndash; a form input that allows users to enter information</li>
              </ul>
            </diamond-grid-item>
            <diamond-grid-item small-mobile="12" small-tablet="6">
<syntax-highlight
  language="diff-html"
  webc:import="npm:@11ty/eleventy-plugin-syntaxhighlight"
>
<h2>Title</h2>
<p>A paragraph of text.</p>
+ <button type="button">Action</button>
</syntax-highlight>
            </diamond-grid-item>
          </diamond-grid>
        </diamond-section>
  
        <diamond-section padding="fluid" class="fade-in" id="canvas-tab">
          <diamond-grid wrap="wrap">
            <diamond-grid-item small-mobile="12" small-tablet="6">
              <p class="diamond-text-size-lg diamond-spacing-bottom-md">
                A canvas represents a part of the page that content and controls sit within.
                Canvases provide padding and backgrounds for their content area, but do not
                dictate any other layout constraints.
              </p>
              <h3 class="diamond-text-size-base">Examples</h3>
              <ul>
                <li>Card &ndash; a flat box, often containing an image, title, text and a call to action</li>
                <li>Header &ndash; a floating element at the top of the page, containing the logo and main navigation</li>
                <li>Hero &ndash; the first element in the main content of the page, containing the title and intro</li>
              </ul>
            </diamond-grid-item>
            <diamond-grid-item small-mobile="12" small-tablet="6">
<syntax-highlight
  language="diff-html"
  webc:import="npm:@11ty/eleventy-plugin-syntaxhighlight"
>
+ <my-card>
    <h2>Title</h2>
    <p>A paragraph of text.</p>
    <button type="button">Action</button>
+ </my-card>
</syntax-highlight>
            </diamond-grid-item>
          </diamond-grid>
        </diamond-section>
  
        <diamond-section padding="fluid" class="fade-in" id="composition-tab">
          <diamond-grid wrap="wrap">
            <diamond-grid-item small-mobile="12" small-tablet="6">
              <p class="diamond-text-size-lg diamond-spacing-bottom-md">
                Compositions are an invisible element of the page that provides layout.
                Compositions are solely concerned with creating structure and spacing.
              </p>
              <h3 class="diamond-text-size-base">Examples</h3>
              <ul>
                <li>Grid &ndash; a layout with grid cells arranged in columns and rows</li>
                <li>Spacing &ndash; adds spacing between components or areas of the page</li>
                <li>Container &ndash; sets a max width for a page, block of content or components</li>
              </ul>
            </diamond-grid-item>
            <diamond-grid-item small-mobile="12" small-tablet="6">
<syntax-highlight
  language="diff-html"
  webc:import="npm:@11ty/eleventy-plugin-syntaxhighlight"
>
+ <div class="grid">
+   <div class="grid-item">
      <my-card>
        <h2>Title</h2>
        <p>A paragraph of text.</p>
        <button type="button">Action</button>
      </my-card>
+   </div>
+   <div class="grid-item">
      <my-card>
        <h2>Title</h2>
        <p>A paragraph of text.</p>
        <button type="button">Action</button> 
      </my-card>
+   </div>
+ </div>
</syntax-highlight>
            </diamond-grid-item>
          </diamond-grid>
        </diamond-section>
      </diamond-section>
    </section>
  
    <d-separator></d-separator>
  
    <section>
      <diamond-section padding="fluid">
        <d-title-group class="diamond-text-align-center diamond-spacing-bottom-xl">
          <p>It’s pretty simple, but that’s the whole point!</p>
          <h2>It’s easy to understand</h2>
          <p>Each component is created with a single concern from one of four areas of responsibility.</p>
        </d-title-group>
        <p>When following Diamond UI methodology</p>
        <ul>
          <li>Simple – components are small and easy to understand.</li>
          <li>
            With clear boundaries between them, it’s immediately obvious when a component is trying
            to overstep its area of responsibility and contribute to technical debt.
          </li>
          <li>With minimal onboarding, developers can quickly understand where to find each type of component.</li>
          <li>The methodology does not dictate any technology or naming constraints.</li>
        </ul>
      </diamond-section>
    </section>
  
    <d-separator></d-separator>
  
    <section>
      <diamond-section padding="fluid">
        <d-title-group class="diamond-text-align-center diamond-spacing-bottom-xl">
          <p>You’ll grow to like it</p>
          <h2>It pays you back</h2>
          <p>Each component is created with a single concern from one of four areas of responsibility.</p>
        </d-title-group>
        <p>When maintaining components that were built with Diamond UI</p>
        <ul>
          <li>By scoping to a single area of responsibility, components are less prone to prop bloat.</li>
          <li>With fewer output variations, Diamond components are easier to test.</li>
          <li>Diamond UI components have simple interfaces and less complicated props to understand.</li>
          <li>
            Diamond UI solves future problems, by being extremely flexible. Components can be
            constructed in thousands of combinations to suit the context.
          </li>
          <li>
            When compared to a utility-first framework, Diamond UI components retain human
            legibility whilst staying almost as flexible.
          </li>
        </ul>
      </diamond-section>
    </section>
  
    <d-separator></d-separator>
  
    <section>
      <diamond-section padding="fluid">
        <d-title-group class="diamond-text-align-center diamond-spacing-bottom-xl">
          <p>The TL;DR you’ve been looking for</p>
          <h2>It’s about clarity, not perfection.</h2>
          <p>
            Software products are never finished. Features can always be improved. Diamond UI makes it
            easy to see where your interface changes will take effect. Giving you more confidence
            when developing your product.
          </p>
        </d-title-group>
        <diamond-grid wrap="wrap">
          <diamond-grid-item small-mobile="12" small-tablet="6">
            <d-alert>
              <d-icon icon="tick" class="text-color-green" slot="icon"></d-icon>
              <h3 class="text-color-green">What it is</h2>
              <ul>
                <li>A helping hand to guide teams when creating interfaces</li>
                <li>A rather simple, yet potentially transformative way of building interfaces</li>
                <li>The outcome of decades of building complicated interfaces</li>
              </ul>
            </d-alert>
          </diamond-grid-item>
          <diamond-grid-item small-mobile="12" small-tablet="6">
            <d-alert>
              <d-icon icon="cross" class="text-color-red" slot="icon"></d-icon>
              <h3 class="text-color-red">What it is not</h2>
              <ul>
                <li>Another UI pattern library</li>
                <li>A silver bullet… defining and naming things is always tricky.</li>
                <li>The next big thing in “DEZINE SYSTAMZ”</li>
              </ul>
            </d-alert>
          </diamond-grid-item>
        </diamond-grid>
      </diamond-section>
    </section>
  
    <d-separator></d-separator>
  
    <section>
      <diamond-section padding="fluid">
        <d-title-group class="diamond-text-align-center diamond-spacing-bottom-lg">
          <p>OMG, we still have your attention!</p>
          <h2>Interested in trying it out?</h2>
          <p>New is exciting, but it comes with friction – we realise there’s more to explain.</p>
        </d-title-group>
        <diamond-wrap size="lg">
          <diamond-grid wrap="wrap" gap="lg">
            <diamond-grid-item small-mobile="12" small-tablet="6">
              <d-nav-card icon="document" href="/docs/">
                <h3>Documentation</h3>
                <p>Guidance on how to get started and use Diamond UI on your next project.</p>
              </d-nav-card>
            </diamond-grid-item>
            <diamond-grid-item small-mobile="12" small-tablet="6">
              <d-nav-card icon="book" href="/about/">
                <h3>About</h3>
                <p>The short story of Diamond UI and how it came to be.</p>
              </d-nav-card>
            </diamond-grid-item>
          </diamond-grid>
        </diamond-wrap>
      </diamond-section>
    </section>
  </div>
</diamond-wrap>
